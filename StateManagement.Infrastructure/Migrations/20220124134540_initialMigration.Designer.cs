// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StateManagement.Infrastructure;

#nullable disable

namespace StateManagement.Infrastructure.Migrations
{
    [DbContext(typeof(StateManagementDbContext))]
    [Migration("20220124134540_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StateManagement.Domain.Flow.FlowAggregate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("FlowName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("flow_name");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.HasKey("Id")
                        .HasName("pk_flows");

                    b.ToTable("flows", (string)null);
                });

            modelBuilder.Entity("StateManagement.Domain.Flow.StateEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<long?>("FlowAggregateId")
                        .HasColumnType("bigint")
                        .HasColumnName("flow_aggregate_id");

                    b.Property<long>("FlowId")
                        .HasColumnType("bigint")
                        .HasColumnName("flow_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<byte>("Order")
                        .HasColumnType("smallint")
                        .HasColumnName("order");

                    b.Property<List<long>>("TaskIds")
                        .IsRequired()
                        .HasColumnType("bigint[]")
                        .HasColumnName("task_ids");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.HasKey("Id")
                        .HasName("pk_state_entity");

                    b.HasIndex("FlowAggregateId")
                        .HasDatabaseName("ix_state_entity_flow_aggregate_id");

                    b.ToTable("state_entity", (string)null);
                });

            modelBuilder.Entity("StateManagement.Domain.Task.TaskAggregate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("task_name");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.HasKey("Id")
                        .HasName("pk_tasks");

                    b.ToTable("tasks", (string)null);
                });

            modelBuilder.Entity("StateManagement.Domain.Flow.StateEntity", b =>
                {
                    b.HasOne("StateManagement.Domain.Flow.FlowAggregate", null)
                        .WithMany("States")
                        .HasForeignKey("FlowAggregateId")
                        .HasConstraintName("fk_state_entity_flows_flow_aggregate_id");
                });

            modelBuilder.Entity("StateManagement.Domain.Flow.FlowAggregate", b =>
                {
                    b.Navigation("States");
                });
#pragma warning restore 612, 618
        }
    }
}
